#!/usr/bin/env python
# -*- coding: utf-8 -*-

import sys, os, re
from PyQt4 import QtCore, QtGui

def main(argv):
    helloworld_script = sys.argv[0]
    if os.path.islink(helloworld_script):
        helloworld_script = os.readlink(helloworld_script)
    helloworld_dir = os.path.join(os.path.dirname(helloworld_script), '..')
    prefix = os.path.abspath(os.path.normpath(helloworld_dir))

    src_dir = os.path.join(prefix, 'src')
    data_dir = os.path.join(prefix, 'data')
    share_dir = os.path.join(prefix, 'share', 'helloworld')

    if re.match(r"(?i)c:\\program", prefix):
    # Gestartet unter Windows, installiert
        print >>sys.stderr, 'Using resources from', data_dir
    elif os.path.exists(src_dir) and os.path.exists(
        data_dir) and not prefix.startswith("/usr"):
        # Gestartet vom lokalen Ordner, nicht installiert
        print >>sys.stderr, 'Using modules from', src_dir
        sys.path.insert(0, src_dir)
        print >>sys.stderr, 'Using resources from', data_dir
    else:
        # Gestartet unter *nix, installiert
        data_dir = share_dir
        print >>sys.stderr, 'Using resources from', data_dir
        #sys.path.insert(0, src_dir)


    from helloworld.mainwindow import MyMainWindow
    
    if os.path.exists(data_dir):
        os.chdir(data_dir)
    
    app = QtGui.QApplication(argv)

    language = unicode(QtCore.QLocale.system().name())

    qtTranslator = QtCore.QTranslator()
    qtTranslator.load("qt_{0}".format(language), QtCore.QLibraryInfo.location(QtCore.QLibraryInfo.TranslationsPath))
    app.installTranslator(qtTranslator)

    myappTranslator = QtCore.QTranslator()
    myappTranslator.load(":/translations/helloworld_{0}".format(language))
    app.installTranslator(myappTranslator)

    mainwindow = MyMainWindow()
    mainwindow.show()
    
    sys.exit(app.exec_())

if __name__ == "__main__":

    main(sys.argv)

